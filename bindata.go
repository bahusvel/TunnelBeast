// Code generated by go-bindata.
// sources:
// html/index.html
// DO NOT EDIT!

package main

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _htmlIndexHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x7c\x7d\x77\xdb\x36\xb2\xf7\xdf\xea\x39\xfd\x0e\x78\x18\x6f\x22\x6d\xad\x17\xbf\x28\x4f\x2a\x8b\xda\x75\x6c\xe7\xd6\x77\x9b\xd8\xc7\x2f\xf7\xf6\x1e\xc7\xbb\x81\x48\x48\x44\x03\x11\x2c\x00\x5a\x76\x1d\xdf\xcf\x7e\x0f\x00\x82\x84\x48\x4a\xa6\x6c\xb9\x4e\xdb\x4d\x9b\xd8\x04\x81\xc1\xcc\xe0\x37\x83\x99\x21\xc8\x7e\x20\x26\x64\xf0\xed\x37\xdf\x7e\xd3\x0f\x10\xf4\x07\xdf\x7e\x53\xeb\x4f\x90\x80\xc0\x0b\x20\xe3\x48\xb8\x4e\x2c\x46\xcd\x37\x8e\xba\xc1\x3d\x86\x23\x01\x38\xf3\x5c\x27\x10\x22\xe2\xbd\x76\xdb\xa3\x3e\x6a\xfd\xfc\x4b\x8c\xd8\x4d\xcb\xa3\x93\xb6\xfe\xb5\xb9\xd5\xda\x6c\x6d\xb4\x26\x38\x6c\xfd\xcc\x9d\x41\xbf\xad\x87\xce\xa5\x12\x73\xd4\x1a\xd1\x50\xc0\x29\xe2\x74\x82\x14\x25\x86\x08\x82\x1c\xf1\xf6\x55\xb7\xd5\x69\x6d\xb7\x7f\xe6\x6d\x48\x48\x9e\x9e\xa2\x28\x6e\x08\x92\xb4\x6b\x7f\xc7\x93\x88\x32\x01\x62\x46\xea\x86\xb6\xa4\xcb\x5b\x63\x4a\xc7\x04\xc1\x08\x73\x45\xdc\xe3\xfc\x6f\x23\x38\xc1\xe4\xc6\x3d\xa1\x43\x2a\x68\x6f\xab\xd3\x69\xec\x28\x7a\xb5\xbf\xcb\x21\xcd\x11\xf4\x10\xb8\x95\xd7\xb5\xe4\x5a\x76\xef\x81\x57\xbb\xec\x8a\xbe\xda\x51\x37\x38\xf3\x7a\x6a\x32\xd9\xf6\x96\x12\xff\x50\x40\x82\xbd\x96\x10\xa3\x86\xea\x71\xa7\x29\xb6\x04\x16\xc4\x50\x8b\x28\xc7\x02\xd3\xb0\x07\x18\x22\x50\xe0\x2b\xb4\x33\x6f\x96\x75\xc0\x11\xc3\x23\x7d\x5f\xa0\x6b\xd1\x84\x04\x8f\xc3\x1e\xf0\x50\x28\x10\xb3\xc6\x71\xfc\x2b\xea\x81\xad\x6e\xe7\x2f\xba\x31\x82\xbe\x8f\xc3\x71\x0f\x6c\xfe\x05\x74\x40\x47\x37\x7a\x94\x50\xd6\x03\xd3\x00\x0b\x34\xc3\x1e\xa1\x63\x1c\x36\x23\x38\x36\x3c\x4e\xb1\x2f\x82\x1e\xd8\x7a\xdd\x89\xae\x73\x04\xb7\x2c\x82\x13\xc8\xc6\x38\xec\x01\x18\x0b\x3a\x43\x50\x4d\xd1\x1c\xd2\x6b\xe4\xdf\x23\xf5\xaf\x4d\x1c\xfa\xe8\xba\x07\x36\xf4\xf5\x10\x7a\x9f\xc7\x8c\xc6\xa1\xdf\x03\x2f\xde\xa9\x3f\x66\xae\xeb\x66\x91\x2d\xc3\x41\x47\xf1\x00\xba\x45\x7e\x37\xde\x98\xa6\x79\x0a\x1c\xd2\xeb\x26\x0f\xa0\x4f\xa7\x92\x4e\x07\x6c\x76\xa2\x6b\xd0\x01\x6c\x3c\x84\xf5\xce\x3a\x48\xfe\x6f\x6d\x36\xd6\x41\x07\x74\xa3\x6b\xf5\xb7\xe4\xfe\xf6\xec\x9a\x8f\x19\xba\x69\x8e\x30\x22\x7e\x19\x8c\x1c\x8d\x3b\x67\x1d\x70\x18\xf2\xa6\xb5\xce\x34\x16\x04\x87\xa8\x67\x94\x3c\xa3\x91\xd1\xa6\xfc\xcf\xf0\xcd\x7c\xc4\xd2\x7e\x89\x72\x36\x3a\x06\x03\x99\x6e\x3a\x60\xa3\x5b\x54\x4c\xaa\x2b\xa5\x00\xfc\xab\x6a\xd5\x44\xe5\xd2\x15\x95\x46\xd0\x48\x14\x30\xb7\xb1\x99\x90\x31\x72\x87\x70\x82\x7e\x4b\xb9\x57\x2e\xe6\x1c\xe3\x2a\x08\x8a\x18\xa3\xec\x3d\xe2\x3c\xb3\x9b\x07\x8a\x5a\x58\xba\xc4\x52\x5f\xec\xbe\xed\x74\x3a\x9d\x22\x2b\xdb\xb3\xac\x8c\x28\x9b\x3c\xb7\x9d\x6d\x76\x9e\xc7\xce\x70\x18\xc5\xe2\x89\x90\x56\x58\x97\x25\xa1\xd7\xad\x02\xbd\x05\xeb\xaa\x64\xeb\xe1\xf0\x0a\x12\x6c\xac\x29\xaf\x45\x4b\x49\x9b\xdd\x6e\xa6\xa6\xef\x1b\x16\x21\x8e\x08\xf2\xfe\xa8\x5a\x1a\xc6\x42\xd0\x70\x39\xe1\x14\x46\x05\x83\x21\x97\xb6\xd3\x03\x71\x14\x21\xe6\x41\x8e\x2a\xc8\xbe\xbd\xb7\xfb\xae\x3b\xcf\x72\x73\xb2\x97\x48\x69\x6c\xdb\x36\xba\x32\xe9\x6a\xcd\x29\x1a\x7e\xc6\x09\x9b\x89\x51\x43\x42\x40\xa7\xb5\x05\x50\xca\xea\xe2\xbb\x5e\xcc\xb8\x9c\x2d\xa2\x38\x35\x44\xe3\xbf\xf8\x04\x12\xd2\xfc\x1a\xb4\xf7\x26\x43\x40\x09\x72\x9a\x72\xdf\xe9\x81\xcd\x02\x72\xde\x7c\x35\x2a\xad\xf9\x98\x47\x04\xde\xf4\x00\x0e\xa5\xe8\xcd\x21\xa1\xde\xe7\x85\xee\xd0\x80\x97\xfa\x37\xc6\xb2\x6d\x35\xfd\xff\xd7\xc3\x37\xdd\xc4\xc0\xda\x7f\x05\x23\x48\x88\xbc\x0f\x46\x94\x01\x4a\x7c\x30\x64\x74\xca\x11\xe3\xe0\xaf\xed\xc2\x60\x23\xa5\xe4\x04\xb2\xe6\x98\x41\x1f\xa3\x50\xd4\x19\x1e\x07\x62\xdd\xd0\x5e\x07\x2f\xde\xec\xef\x6d\xbe\x7e\xd7\x28\xae\x52\x73\x42\x7f\x7d\xcc\x70\xfa\x88\xc1\xf9\x91\x82\xaa\xc0\x63\xee\xd8\x8a\x98\x35\x4a\xd1\xb8\x98\x50\x2a\x02\x05\x22\x18\x0a\x0c\x09\x86\x1c\xf9\x49\x47\x29\x3b\xe5\xd7\x85\x9e\x63\x06\x6f\xb8\x07\x49\x1a\x3b\xd7\xfa\x6d\x93\x7b\xf4\xdb\x49\xfe\xf4\xed\x37\x7d\xb9\xa4\x76\xaa\x23\x6e\x22\xe4\x3a\x12\x06\xed\x9f\xe1\x15\xd4\xad\x2a\xa5\xaa\x5d\x41\x06\xce\x4f\x0f\x4e\x3e\xec\xbe\x3f\x00\x2e\x70\x9c\x1d\xd3\x7a\xbc\x7b\x7a\xfa\xdf\x47\x27\xfb\xb3\xad\x27\x47\xe7\x67\x07\xa7\xc0\x05\x17\x97\x69\xdb\xbb\xdd\xff\x3a\x3a\x39\x2c\x34\x4b\xb2\x69\x93\x69\x9c\xc0\x08\xb8\x09\xdc\x9c\x83\x93\x93\xa3\x13\xb0\xbb\xb7\x77\x70\x7a\x0a\xf6\x0f\x3e\x1c\x1e\xec\x3b\x3d\xe0\xec\x7a\x1e\xe2\x1c\xf8\x28\xc4\xc8\x6f\x81\x63\x95\x86\x01\x4f\xa6\x67\x9e\x00\x37\x34\x66\x00\xfa\x13\x1c\x62\x2e\x18\x14\x94\xb5\x40\x7f\xc8\xda\x03\xf5\x8f\xb3\x6e\x93\x3e\xf8\xe9\xf0\xf4\xec\x54\xd2\x3c\x41\x1e\x65\x3e\x40\xd7\x98\x0b\x9e\xd1\x0c\x90\xf7\x59\x53\xd4\xbb\xb8\x0f\x05\x9c\x4f\xee\xf8\xe8\xe4\x0c\x1c\xed\xed\x9d\x1f\x27\x9c\x1e\xcb\x5c\x8f\x7a\x5e\x1c\xd9\x9c\x0a\x76\x03\x60\x48\x45\x80\x18\x90\xd9\xe0\x7c\x82\x87\x1f\x8e\xcf\xcf\x24\xa1\x43\x35\xbb\x8a\xe7\x1e\xca\xdc\xee\xf9\xd9\x0f\x9a\x94\x47\x19\x93\x9b\x6d\xcc\x11\x03\x87\xfb\x80\x32\x10\x41\xce\xa7\x94\xf9\xf3\x87\x7f\x38\x3a\xd3\xea\x92\x34\xce\x02\x04\x98\xd6\xd8\x0d\x8d\x95\x40\x82\x02\x1f\x11\x24\x10\xc0\x1c\x84\x54\x68\x55\xb6\xe6\x91\xdb\x7f\x2b\xe9\xec\xd1\x30\x44\x9e\xf4\x63\x72\xfc\x3e\x14\x70\x28\x25\x53\x72\xae\x2b\xb2\x58\x00\x38\x86\x38\x04\x04\x0a\x54\xb2\x92\x77\x09\x76\x46\x71\xa8\xe9\x78\x0c\x41\x81\xea\x81\x98\x90\x53\xc1\x1a\x09\x94\x24\xb4\x46\x0c\x8e\x81\x0b\x7c\xea\xc5\x13\x14\x8a\x96\xee\xb9\x9f\x5c\xbe\x63\x70\x2c\x7f\xd6\x1b\x9a\xcf\x9a\x40\x93\xa8\xd8\xfd\x80\x20\xd5\xeb\x95\x8f\xaf\x5e\x35\x8c\xff\x9c\x44\x2d\x1c\x86\x88\xfd\x70\xf6\xfe\x47\xe0\x82\x64\xf2\x64\x0b\x09\x30\x41\xa0\xae\x3a\x8d\x30\xe3\x62\x2f\xc0\xc4\x37\x8c\xd5\x24\x57\x2d\x18\x45\x28\xf4\xd5\x8d\x42\x47\x4d\xe5\x4e\xfd\xcb\x90\x88\x59\xa8\x24\x99\x89\xae\x8d\xf0\x7a\x05\x4e\x68\x2c\x50\x5d\x45\xd3\xb6\xfc\x4c\x36\x03\x37\x31\xd1\x0b\x75\x5f\x5b\xa3\xba\x1d\x41\x06\x27\x1c\xb8\xe0\x93\xc4\x85\xcc\x91\xdc\xb5\x5b\x63\xfa\x77\x2f\x0d\x42\xdc\xb5\x5b\x63\xf9\x77\x2f\x3d\x22\x1d\xa0\xbb\x76\xab\x68\xb7\xf6\xd4\xe5\xdd\x4b\x4e\x63\xe6\x21\x1c\xa5\x37\x4e\x55\xc3\xe1\xf1\xdd\x4b\xb5\x23\x85\x90\x58\x37\xf7\x11\x17\x38\x84\x52\x00\xd9\x03\x5d\xeb\x1e\xd2\x32\xd2\x3e\x07\x49\xa3\x34\xa8\x8c\xc8\x4c\x97\xc3\xd0\xea\xf2\x29\x93\xeb\x3a\x60\xc0\x05\x21\x9a\x82\x9f\xde\xff\xf8\x83\x10\xd1\x09\xfa\x25\x46\x5c\xd4\x1b\x59\x1f\x1f\x91\x03\x89\xb9\x64\x75\xed\x65\x1f\x23\x91\xb4\xbe\xbd\x39\xf4\xeb\x8e\xa5\x62\x35\xc4\x31\x45\x99\xda\x75\xc0\x5a\x34\x42\x61\xfd\xd5\xf1\xd1\xe9\xd9\xab\x75\xe0\xb4\x75\x67\x67\x5d\xee\x8e\x1c\x25\x13\xca\x7e\x1c\x89\x84\x8d\x1f\x10\xf4\x11\xab\x4b\x53\x10\x28\x14\x4d\xe9\x8b\x9d\x75\xe0\xc0\x28\x22\xd8\x53\x5a\x69\x5f\x37\xa7\xd3\x69\x53\x46\x32\xcd\x98\x11\x14\x7a\xd4\x47\x7e\x6e\xe2\x90\x21\xe8\xdf\x70\x01\x05\xf2\x02\x18\x8e\xe5\x4a\xa7\xb8\xa8\xa7\x70\xc3\x23\x50\x97\xfd\x55\xef\x53\xd9\x1b\xb8\x2e\xd8\x06\x2f\x5f\x02\xc5\x97\x80\x22\xe6\xb2\x69\xb3\xd3\x49\x07\xd5\xe6\x6a\x03\xfa\xbe\xad\x0a\x29\xd7\xae\x10\x0c\x0f\x25\x02\x9d\x00\xfb\x3e\x0a\xa5\x34\x82\xc5\x28\x63\xd8\x66\x83\x47\x34\xe4\xe8\x0c\x5d\x0b\x39\xab\x73\xf4\x0f\x27\x9b\xb6\x96\x5b\x97\xfb\xc9\xeb\x61\xda\x4c\xcc\xe5\xdd\xcc\xac\xff\xaf\x38\x2f\x0e\xe5\xb6\xd3\x58\x30\x2f\x43\x13\x7a\x85\x8a\x53\x67\x53\xe6\x47\xd8\xee\xc0\x51\x2a\x32\xee\x71\x04\x31\xc9\x6f\x06\xd2\xc3\xcd\xf8\xb6\x7b\x45\x59\x9a\xc3\x45\x0c\x4e\x60\x74\x91\xd7\x4a\xe2\x19\x12\xc7\x73\x67\x41\x8d\xa3\xd0\xaf\x6b\x6f\x91\x50\x67\x68\xc4\x10\x0f\xea\xe9\xa5\xf6\x52\x12\xf3\x0b\xdc\xd4\x39\x47\xac\xe8\xa5\xd4\xa6\xe4\xea\xe0\x60\x25\x3e\x4a\xf6\x74\xd7\x6e\xe5\x8f\x27\x77\x0b\x52\xa4\xaa\x5e\x41\xf6\x7d\x76\xcf\xf0\x94\x8e\xc1\x52\xc6\x57\xee\x17\x96\x36\xa6\x07\x3b\x92\x19\xb7\x20\x15\xf4\xb4\x5e\xe1\x39\x8d\x9c\x07\x74\xaa\x23\x11\xb5\x3f\xaf\x83\x82\xa9\xcb\x30\x09\xb8\x9a\x83\x4f\x7d\xc1\x06\x89\x14\x7d\xe1\x03\x8f\x40\xce\x5d\x27\x2b\x51\x3b\xe6\x6e\xad\x10\x54\x80\xe6\x00\x94\x06\x0a\xbd\xf2\x10\xa3\x57\x1a\x32\x98\xc9\xdb\xc2\xb7\x18\x19\xf4\x7d\x7c\x65\xb8\xb1\xeb\x11\x0e\xa0\xa1\x47\xb0\xf7\xd9\xb5\x43\x82\xfa\xda\xad\x12\xf3\xae\xb1\x93\x31\xdc\xc7\x86\xc0\x08\x72\x30\x82\x32\xb9\xe7\x41\x13\x12\xe1\x0c\xfa\x6d\x3c\xe8\xb7\x7d\x7c\x35\x78\xf8\xfc\xd0\xf7\xdf\xc1\x2b\xca\x70\x85\xf9\x99\x9c\x3f\x40\x90\xdd\x33\x77\xbf\x2d\xd8\xe0\x93\xfa\x7d\xad\xee\xbc\x50\xfa\xe2\x4e\x23\x89\x54\x55\x78\xdd\x98\xbb\xec\x29\x37\xa3\xe4\x97\x87\x2d\x7e\x56\xa7\xb7\x17\xdf\xd0\x6c\x99\xb4\x52\xf9\xfe\xa2\x04\xe0\x7e\x1c\xa5\xa4\x66\x50\xa3\xe1\x94\xde\x2b\x60\x27\xbd\xb3\x52\xf8\x54\x5e\xc1\xa7\x40\x50\xcc\x97\x9c\x3f\x22\x31\x6f\x7a\x98\x79\x04\x2d\x85\x23\xa3\xbb\xca\x50\x52\x41\x82\xdc\xbb\x1f\xef\x3f\x92\x18\xe0\xc1\x2b\xa4\x58\x59\xe5\xea\xe4\x74\x23\xb9\xab\xa4\x97\x1c\x60\x0a\x7a\x31\x4a\x06\x6e\x56\x7a\x59\x10\x4a\x99\xee\x49\x38\x55\x6e\x5f\x2f\xab\x07\x5c\x33\x29\xde\x1c\x33\xca\x67\x79\xe5\x96\x98\x4f\xf4\xca\x2d\xef\xa9\x83\x3a\xa3\xe8\xaa\x81\x9d\xe9\xff\xec\xc1\xdd\xa3\xd3\xbe\x3f\x57\x96\x66\xd6\xed\xdf\x89\x5a\x0a\x20\x93\xde\xd7\x25\x08\x6d\x17\x93\xd9\xb8\xc4\x1b\x65\x93\x56\xd6\xd2\xba\x82\x24\x46\x99\xc1\xd9\xa6\x6e\x7a\xdb\x6d\xf9\xfe\xb6\xd1\xe7\xa9\x97\xf5\x57\xd5\x42\x53\x85\x56\xad\x12\x41\x16\x3f\x04\x85\x63\x11\x48\xe0\x66\xd8\xd6\x83\xbe\x73\xc1\x2b\xe3\x4b\xc0\xe1\x31\xc0\x1c\x30\xf4\x4b\x8c\x19\xf2\x3f\x86\xaf\xec\xca\x9b\x4d\x52\x31\x51\x91\xa8\xaa\x00\x2f\x26\xab\x46\xa5\x34\x20\x41\x4c\x24\x6d\xc9\xca\x16\x96\x29\x5d\xe5\x87\xe6\xc4\x33\x2e\x3a\xbb\x28\xb8\x65\xfb\xb2\xe0\x8d\xed\xcb\x65\x9d\x30\xf4\xfd\xaa\x4e\x38\x57\x62\x5a\xe0\x7e\xa1\xef\xff\xfe\x7d\xee\x12\x85\xc7\x55\x67\xd5\xb9\x45\xf9\xcd\xfc\x78\x7e\xde\xfb\xfd\x78\x7e\x44\x49\xb5\x0d\xfa\x7e\xde\x83\xeb\x07\x26\x22\x40\xf3\x9e\x97\xdc\x2b\xd2\xd2\x9c\x2e\x62\xf4\xb7\x76\xe6\x76\x90\xbf\x64\xcc\xb8\x3a\x67\xf3\xf5\xc5\x83\xff\x76\x45\x7f\x7c\x57\xb4\xb4\xdd\xce\x15\x7d\x02\xa3\x7f\x65\x80\x76\x1a\x3a\x18\x91\x5a\x2f\x05\xf6\x52\xf4\x24\xaa\xcb\x28\xda\xe8\xde\x79\xbc\x7b\x9d\x71\x96\xbb\x9e\xc0\x57\x28\x33\x7f\xfd\x90\x70\x35\xa1\xef\xd7\xe4\xfc\xec\x1a\x59\xe5\x27\xa3\x69\x07\x3b\x15\x06\x2e\x88\x18\x9d\x44\xa2\xee\x24\xea\x51\x47\x66\x00\x04\xd2\x1d\xaa\xe3\x2f\xea\x99\xfc\xac\x4a\x7b\x40\xc2\x75\x72\xa3\x8c\xc6\xe0\x4c\x2e\xe1\x2c\x69\x17\x84\x31\x21\xe9\xe2\xd9\x9a\x2d\x8f\xf9\x72\xc9\xfb\x4a\x72\xf6\xdf\xef\x63\xd9\xea\xa9\xba\x85\x87\xdf\xb5\xa3\xfe\x53\x66\xea\x73\x23\xbc\x3f\x69\x8e\xae\x2a\x93\xf9\x14\x3d\x44\x53\x63\xff\x26\x8b\xb6\x9a\xf2\x49\x74\x88\xa6\xc6\x31\x58\xbd\xd3\x63\x41\x95\x52\x6e\x9b\xfc\xe2\xf4\xf8\xdc\x30\x66\x65\xc6\x85\xbc\xd8\x9e\x7f\x31\xb9\x63\xc3\x79\x29\xb9\xe7\x4c\xb4\x2d\x95\xb8\x6b\xb7\xd6\x95\xba\x65\x0d\xb1\xae\x1e\x1d\xc0\x56\x7c\x28\xbb\xd8\x3b\xfe\xb1\x1f\x4f\x17\x1e\xd7\xff\xd1\x02\xd8\x15\x45\x87\xbe\xaf\xc0\xa7\x0e\x65\xe4\xb3\xe9\xe4\xbc\xe5\x2a\xf3\xe9\xe7\xf4\xa3\x84\x8e\x69\x2c\xde\x51\x36\x99\x71\xa5\xc5\xc3\xaf\xb5\xe2\xc9\xd7\xf9\x40\x53\x41\x50\x73\x44\x28\x14\x55\x40\xb6\x88\x94\x09\xf5\x56\x43\x4d\x3d\x6d\x5a\x1d\x29\xa9\xb2\xc7\xd2\x99\xc0\x68\x15\x64\xf4\xbb\x82\x09\xa5\x7b\x0c\x65\x11\x11\x1a\x8b\xe6\x12\xfc\xdc\x0b\xb0\x11\x12\x5e\xa0\x42\x17\x5e\xb7\x37\xea\x07\xec\x2b\x9f\xec\xe4\xe4\xbe\x3d\xa2\xc4\xbf\x13\xcc\x85\xed\xdc\x57\xee\xde\xe7\x5a\xa5\x47\x43\x4e\x09\x6a\x11\x3a\x2e\x78\x27\x6b\x4f\xd3\xe7\x0d\x80\x0b\xfe\xf3\xf4\xe8\x43\x2b\x82\x8c\xa3\xd2\xee\x6a\x40\x7a\xe6\x5c\x8f\xb2\x75\x13\x52\x1f\x2d\x4a\x1b\xcc\xb9\x86\x99\xa3\xba\x72\x50\x2b\x80\x5c\x9d\xbf\xfd\x40\x7d\xb9\x5e\xa9\xc7\x54\x37\x35\xaa\xf4\x79\x5d\xd5\x40\x60\xe1\xb8\xae\xfa\x29\xb3\xc1\xba\x7a\xa8\x01\x5c\xd0\xd9\x01\x18\xf4\x13\x2e\x93\x90\x66\x07\xe0\xef\xbe\x4b\x89\xe7\xce\xcc\xf0\x0b\x7c\xb9\x0e\xb0\x7d\x04\xb8\x14\x54\x26\x93\xf9\x2a\x70\x95\x32\xf3\x3c\x00\xb3\x8b\x99\x55\x01\x64\xbf\xa0\x90\x8e\x5d\x06\x46\xd6\xb1\x86\xa7\x42\x92\x5d\x2b\x38\xcd\x4e\x8f\x97\xe0\x2b\x65\xa6\x14\x62\xb5\xd2\x03\x3a\xb3\x48\xcb\xf6\xd7\x39\x80\x93\x81\xd3\x57\x01\x36\xc5\x48\x0a\xb4\xaf\xd0\x91\xa9\x6d\xb6\x22\x0c\xcd\x0b\x31\x6a\xcc\x32\xf0\x4b\x4e\x8e\x3c\x25\xf4\x14\x6f\x25\xb0\x73\x25\xe8\xfa\x8a\x81\xf9\x70\x4b\x0f\xf1\x54\x87\xd9\x18\x89\x63\xca\xc4\x4a\x40\xf6\x70\x88\x45\x92\x85\x27\xcc\x82\xca\xd1\x55\x09\x5f\x99\x52\x24\x8f\x15\x11\x56\x05\x4c\x92\x5e\x53\xbf\x8e\xeb\x18\x8b\xfa\x6d\x36\x46\x25\x49\x29\x8a\xac\xd7\x77\x92\xf7\x7b\x3e\xf5\x69\xa4\x80\xa2\x2a\x13\xae\xb3\x76\xab\x46\x5f\xe0\xcb\x3b\x67\x60\x5d\xf4\xdb\xba\xdf\xe0\x53\xc3\x62\xd3\x7e\xdf\x46\xd2\x5d\xb4\xc3\xa6\x79\x44\xc2\x4c\x86\x4c\x3d\x68\x26\xac\xb3\x9a\xac\x4d\xd9\x6a\x4d\x3c\xe7\xbc\x0c\x04\x87\x85\x04\xa4\x50\x6f\xb1\x3c\x8b\x5d\xdc\x99\x57\xd9\xc9\x97\x75\xca\x6a\x3a\xd2\xc2\x1f\x51\xba\x29\x39\xd4\xf0\x88\xca\xcd\xca\x8e\x48\xa4\xc7\x04\x45\x74\x6f\x11\x25\x66\x44\xea\xb7\x0d\x63\x11\x38\x65\xa7\xe4\x2c\x8f\x93\xd5\x70\x2c\x8f\x93\xaf\xde\xc8\x59\xb5\x3b\x71\xa4\x3b\x71\xd6\xe5\x14\xeb\x40\x66\x0c\x0d\xab\xc7\x7d\x9e\x44\x8b\x57\xdd\x9d\xe8\x69\x97\xa8\x36\xab\x01\x25\x55\x15\xcd\x5d\x79\x59\x85\x4f\xb1\xf0\x82\x74\xac\xe5\x68\xb2\xba\x82\x07\x39\x02\xce\xee\xfe\xfb\xc3\x0f\x4e\xcf\x34\x56\x4d\x47\xef\xaf\x0f\x57\xca\x46\xe7\x93\x49\x88\xcc\x32\x7b\xf4\x0f\x8b\x53\x2b\xef\x37\xeb\x9d\x4d\x6e\x55\x00\xcc\xba\x57\xe0\x6c\x26\x31\xad\x58\x10\xaa\x5a\x59\x78\x8c\xc6\x0a\x85\x85\xc7\x10\x9b\x4d\x9c\x1f\x43\x29\x2b\x07\x54\xa0\x62\x6f\x97\xce\x6e\x2c\x02\xc0\x63\xf5\x9a\xb0\xdd\x29\x57\x12\x92\x7f\x86\x0c\xc1\xcf\x3b\xb3\x38\xb0\xdf\x97\x5d\x30\x81\xae\x87\x55\x12\x45\x7a\x95\x77\x10\x93\x47\x6a\xc4\x22\x93\xaf\x94\x15\x4c\xf1\x72\x9e\x8c\x3e\x1a\xc1\x98\x88\x45\x92\x69\xff\x1c\x87\x3c\x42\x1e\x1e\x61\x29\xe4\x73\xcb\xe8\x9c\x67\xdc\x68\xfe\x9c\x39\x02\xde\x15\x62\x4b\xe3\x69\x8b\x15\xc2\xd2\x8a\x4d\xee\xe3\x5d\xd6\xf1\x70\xf5\x91\x2c\x7d\xee\xfb\x2c\x0e\x43\x44\xde\x22\xc8\x85\x1a\xa2\x4f\x78\xe7\xfa\x67\x5f\xad\x72\xf4\xcd\x5a\x5f\x7d\x08\x07\x2a\x47\xec\x3a\x2f\x1c\x40\x43\x1e\x0f\x27\x58\xb8\x4e\xc2\x4d\x16\x04\x88\x00\xf3\xc6\x8e\x03\xb0\xef\xda\xae\x43\x1f\x1e\xef\x13\x38\x44\x04\x68\xc5\xba\xda\x6b\x98\x69\xed\xcf\xfe\xe8\xe1\xa9\x52\x65\x08\x30\xe8\xb7\xd5\xe0\x84\x90\xae\xdd\x66\x9f\x00\x70\xd4\x73\x6c\xf5\x4e\x80\xf2\x7a\x0e\x88\x08\xf4\x50\x40\x89\x8f\x98\xeb\x9c\xa7\xcd\xed\x12\x02\xc6\x1b\x1a\x22\xd9\xf5\x0c\x91\xe3\xb4\xd9\x10\x49\x3e\xf2\xa1\xa9\x68\x95\x38\x03\x25\x75\xbf\xad\xef\x25\x1d\xa3\xc1\x31\x9d\x22\x86\x7c\x30\xbc\x01\x7d\x08\x02\x86\x46\xd9\x77\xda\xc6\x58\x04\xf1\x50\x7d\x41\x6d\x08\x83\x98\x5f\x21\xd2\xb6\x96\xca\x19\x58\x17\xfd\x36\x1c\xf4\xdb\x91\xa2\xdb\x6f\x4b\xdd\x9a\x45\xb2\x96\xd0\xfa\x4e\x98\x56\xa5\xed\x76\x67\xd5\xaf\x19\xdc\x8b\x19\x43\xa1\x00\x3a\x22\xec\x25\xd2\xb1\x54\x50\x01\x87\xc9\xb7\xe0\xe4\x85\xfa\xb8\x46\x4a\x96\x3b\xd9\x9b\x01\xe6\x1b\x0d\xea\x22\x1b\xb3\xdc\xba\x17\x0e\xea\x14\xd6\xdf\x42\x6e\x05\x70\xa6\xe7\x81\x6d\x6c\x1a\x3f\x5d\xa6\x8d\x25\x61\x3a\x73\xbe\xaa\x12\x56\x13\x06\xec\x33\x39\x09\xf4\xec\x96\x19\xf0\x59\x07\x7e\x1d\xad\x6e\x65\xd7\x33\x37\xc0\xae\xef\x33\xc4\x79\x0f\xfc\x04\x5a\xd9\xdf\xa4\x7f\x04\x85\xec\xe9\x3a\xf5\xfa\x3f\xbf\x7c\x6c\x35\xea\xf5\xcd\xee\x45\xa7\xd9\xbd\x6c\x7c\xa9\x6f\x5e\x74\x9a\xdb\x97\x1f\xfd\xc6\x97\xfa\xc6\x47\x5f\xfd\xbc\xd8\x68\x7e\x7f\xf9\xb7\x8f\x7e\xa3\xd1\xb8\xdd\xbe\x5b\x2b\xb7\x9c\x72\x71\xd4\x91\xa0\x9c\x40\xba\xad\x5c\x24\x99\x99\xcc\x11\x4a\x9d\x44\x66\x32\x18\xec\x81\x0e\xf8\x5f\xf0\xba\xdb\xdd\xea\xe6\x05\xfa\x67\xfd\xa2\xd3\xfc\xfe\xf2\x76\x63\x7d\xfb\xee\xcb\xc5\x46\xb3\x7b\xa9\xaf\xb7\xef\xbe\xbc\x56\x82\xe9\xcb\xad\xbb\x2f\xaf\xbb\xd6\xf5\xa6\xbc\x96\x0d\x9b\xba\x41\x5e\x6d\x69\x8d\x64\xe2\x9e\xea\x4f\x3c\x99\x83\x24\x2a\xdd\x4b\xec\x23\xf9\xfa\x93\x96\xd3\x3e\x69\xa2\x40\x30\xb1\x30\x26\x15\x64\x67\xa8\xc6\x44\xf4\xe5\x22\x67\xb2\xeb\xfb\x33\xae\xa4\xba\xc9\xe7\xe2\xa3\x32\x9c\xff\x0f\x8d\x19\x48\x5f\x20\x58\xd2\xf6\xb3\xea\xe1\x93\x98\xff\xec\xa1\x98\xc7\x7b\x00\x55\xcd\xb1\x1d\x40\x1a\x71\xaf\xc4\x03\x64\x0f\x65\x8b\x0e\xc0\x3c\x8f\xb4\xbc\xb8\x8a\xce\x7b\x8b\xec\x29\x44\xd3\x7f\x65\x9b\x99\xc6\x98\xf5\x24\x7e\xde\xfe\xb6\xd8\x48\x25\xd1\xfc\x66\x67\x3d\xc3\x9f\xb7\xdf\x2d\xdc\xee\x1e\x8e\x50\x3b\x7b\x5a\xb4\x29\xa9\xea\x03\xc0\xa1\xad\xc0\x14\xa6\xf7\xa0\x54\x17\x19\x9f\x04\xa1\x0b\x96\x7c\x39\x74\x5a\xcf\x70\x0d\x40\x67\x19\x49\x62\xa9\x34\x43\x59\xb4\x1c\x3f\x1e\xfd\xc7\xd1\xf9\xd9\xdc\x15\x31\x9c\xf5\xdb\x89\x26\xd4\x37\x96\xc4\x84\x0c\xfe\x2f\x00\x00\xff\xff\x03\x61\xa8\x54\xb4\x56\x00\x00")

func htmlIndexHtmlBytes() ([]byte, error) {
	return bindataRead(
		_htmlIndexHtml,
		"html/index.html",
	)
}

func htmlIndexHtml() (*asset, error) {
	bytes, err := htmlIndexHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "html/index.html", size: 22196, mode: os.FileMode(438), modTime: time.Unix(1589194302, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"html/index.html": htmlIndexHtml,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"html": &bintree{nil, map[string]*bintree{
		"index.html": &bintree{htmlIndexHtml, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

